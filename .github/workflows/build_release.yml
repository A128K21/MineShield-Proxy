name: Build and Release

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Build for both x86_64 and aarch64 (ARM)
        target: [ "x86_64-unknown-linux-gnu", "aarch64-unknown-linux-gnu" ]
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Rust toolchain and target
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build release for ${{ matrix.target }}
        run: cargo build --release --target ${{ matrix.target }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/<your_executable_name>

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Download x86_64 artifact
        uses: actions/download-artifact@v3
        with:
          name: binary-x86_64-unknown-linux-gnu
          path: binaries/x86_64

      - name: Download aarch64 artifact
        uses: actions/download-artifact@v3
        with:
          name: binary-aarch64-unknown-linux-gnu
          path: binaries/aarch64

      # Create a release and attach both binaries in a single step:
      - name: Create GitHub Release with binaries
        uses: softprops/action-gh-release@v1
        with:
          # Generate a tag so that GitHub sees a valid tag for the release
          tag_name: build-${{ github.run_number }}
          release_name: "Automated Build #${{ github.run_number }}"
          draft: false
          prerelease: false

          # Attach the x86_64 and aarch64 binaries.
          # The syntax `path#name` renames the file in the release.
          files: |
            binaries/x86_64/<your_executable_name>#<your_executable_name>-x86_64
            binaries/aarch64/<your_executable_name>#<your_executable_name>-aarch64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
